// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TestingRomanizing.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("SpecFlowFeature1", SourceFile="Features\\Romanizing.feature", SourceLine=0)]
    public partial class SpecFlowFeature1Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "Romanizing.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "SpecFlowFeature1", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void RomanTests(string rawinput, string stringform, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("rawinput", rawinput);
            argumentsOfScenario.Add("stringform", stringform);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Roman Tests", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 2
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 3
 testRunner.Given(string.Format("input of number {0}", rawinput), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 4
 testRunner.When("converted to Roman numerals", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 5
 testRunner.Then(string.Format("Result should be Romanlanguage \"{0}\"", stringform), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Roman Tests, 3", SourceLine=8)]
        public virtual void RomanTests_3()
        {
#line 2
this.RomanTests("3", "iii", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Roman Tests, 4", SourceLine=8)]
        public virtual void RomanTests_4()
        {
#line 2
this.RomanTests("4", "iv", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Roman Tests, 5", SourceLine=8)]
        public virtual void RomanTests_5()
        {
#line 2
this.RomanTests("5", "v", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Roman Tests, 6", SourceLine=8)]
        public virtual void RomanTests_6()
        {
#line 2
this.RomanTests("6", "vi", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Roman Tests, 8", SourceLine=8)]
        public virtual void RomanTests_8()
        {
#line 2
this.RomanTests("8", "viii", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Roman Tests, 9", SourceLine=8)]
        public virtual void RomanTests_9()
        {
#line 2
this.RomanTests("9", "ix", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Roman Tests, 10", SourceLine=8)]
        public virtual void RomanTests_10()
        {
#line 2
this.RomanTests("10", "x", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Roman Tests, 11", SourceLine=8)]
        public virtual void RomanTests_11()
        {
#line 2
this.RomanTests("11", "xi", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Roman Tests, 27", SourceLine=8)]
        public virtual void RomanTests_27()
        {
#line 2
this.RomanTests("27", "xxvii", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Roman Tests, 29", SourceLine=8)]
        public virtual void RomanTests_29()
        {
#line 2
this.RomanTests("29", "xxix", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Roman Tests, 30", SourceLine=8)]
        public virtual void RomanTests_30()
        {
#line 2
this.RomanTests("30", "xxx", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Roman Tests, 31", SourceLine=8)]
        public virtual void RomanTests_31()
        {
#line 2
this.RomanTests("31", "xxxi", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Roman Tests, 777", SourceLine=8)]
        public virtual void RomanTests_777()
        {
#line 2
this.RomanTests("777", "dcclxxvii", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Roman Tests, 999", SourceLine=8)]
        public virtual void RomanTests_999()
        {
#line 2
this.RomanTests("999", "cmxcix", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Roman Tests, 1999", SourceLine=8)]
        public virtual void RomanTests_1999()
        {
#line 2
this.RomanTests("1999", "mcmxcix", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Roman Tests, 2021", SourceLine=8)]
        public virtual void RomanTests_2021()
        {
#line 2
this.RomanTests("2021", "mmxxi", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Roman Tests, 4000", SourceLine=8)]
        public virtual void RomanTests_4000()
        {
#line 2
this.RomanTests("4000", "*throws exception*", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Roman Tests, 0", SourceLine=8)]
        public virtual void RomanTests_0()
        {
#line 2
this.RomanTests("0", "BLANK", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Roman Tests, -1", SourceLine=8)]
        public virtual void RomanTests_1()
        {
#line 2
this.RomanTests("-1", "*throws exception*", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Roman Tests, -100", SourceLine=8)]
        public virtual void RomanTests_100()
        {
#line 2
this.RomanTests("-100", "*throws exception*", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
